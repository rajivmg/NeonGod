#include "neon_math.h"

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec2 constructors
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
vec2::vec2()
{
	Elements[0] = 0;
	Elements[1] = 0;
}

vec2::vec2(r32 X, r32 Y)
{
	Elements[0] = X;
	Elements[1] = Y;
}

vec2::~vec2()
{

}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec3 constructors
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

vec3::vec3()
{
	Elements[0] = 0;
	Elements[1] = 0;
	Elements[2] = 0;
}

vec3::vec3(r32 X, r32 Y, r32 Z)
{
	Elements[0] = X;
	Elements[1] = Y;
	Elements[2] = Z;
}

vec3::vec3(vec2 V2, r32 Z)
{
	Elements[0] = V2.X;
	Elements[1] = V2.Y;
	Elements[2] = Z;
}

vec3::~vec3()
{

}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec4 constructors
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

vec4::vec4()
{
	Elements[0] = 0;
	Elements[1] = 0;
	Elements[2] = 0;
	Elements[3] = 0;
}

vec4::vec4(r32 X, r32 Y, r32 Z, r32 W)
{
	Elements[0] = X;
	Elements[1] = Y;
	Elements[2] = Z;
	Elements[3] = W;
}

vec4::vec4(vec3 V3, r32 W)
{
	Elements[0] = V3.X;
	Elements[1] = V3.Y;
	Elements[2] = V3.Z;
	Elements[3] = W;
}

vec4::vec4(vec2 V21, vec2 V22)
{
	Elements[0] = V21.X;
	Elements[1] = V21.Y;
	Elements[2] = V22.X;
	Elements[3] = V22.Y;
}

vec4::~vec4()
{

}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec2 operators
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

vec2 vec2::operator+(vec2 const & V2)
{
	return vec2(X + V2.X, Y + V2.Y);
}

vec2 vec2::operator-(vec2 const & V2)
{
	return vec2(X - V2.X, Y - V2.Y);
}

vec2 vec2::operator-()
{
	return vec2(-X, -Y);
}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec3 operators
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

vec3 vec3::operator+(vec3 const & V3)
{
	return vec3(X + V3.X, Y + V3.Y, Z + V3.Z);
}

vec3 vec3::operator-(vec3 const & V3)
{
	return vec3(X - V3.X, Y - V3.Y, Z - V3.Z);
}

vec3 vec3::operator-()
{
	return vec3(-X, -Y, -Z);
}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  vec4 operators
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
vec4 vec4::operator+(vec4 const & V4)
{
	return vec4(X + V4.X, Y + V4.Y, Z + V4.Z, W + V4.W);
}

vec4 vec4::operator-(vec4 const & V4)
{
	return vec4(X - V4.X, Y - V4.Y, Z - V4.Z, W - V4.W);
}

vec4 vec4::operator-()
{
	return vec4(-X, -Y, -Z, -W);
}

/*vec2 operator+(vec2 const & A, vec2 const & B)
{
	return vec2(A.X + B.X, A.Y + B.Y);
}*/

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  mat2 constructor
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

mat2::mat2()
{
	_00 = 1; _01 = 0;
	_10 = 0; _11 = 1;
}

mat2::~mat2()
{

}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  mat3 constructor
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

mat3::mat3()
{
	_00 = 0; _01 = 0; _02 = 0;
	_10 = 0; _11 = 0; _12 = 0;
	_20 = 0; _21 = 0; _22 = 0;
}

mat3::~mat3()
{

}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
////
////  mat4 constructor
////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
mat4::mat4()
{
	_00 = 0; _01 = 0; _02 = 0; _03 = 0;
	_10 = 0; _11 = 0; _12 = 0; _13 = 0;
	_20 = 0; _21 = 0; _22 = 0; _23 = 0;
	_30 = 0; _31 = 0; _32 = 0; _33 = 0;
}

mat4::~mat4()
{

}